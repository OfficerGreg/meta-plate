Index: frontend/src/components/pages/home.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from 'react';\r\nimport '../css/home.css';\r\nimport httpClient from \"../../httpClient\";\r\n\r\nconst Home: React.FC = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [username, setUsername] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    const logInUser = async () => {\r\n        console.log(username, password)\r\n\r\n        try {\r\n            const response = await httpClient.post(\"//localhost:5000/login\", {\r\n                username, password,\r\n            });\r\n\r\n            window.location.href = \"/dashboard\";\r\n        } catch (e: any) {\r\n            if (e.response.status === 401) {\r\n                alert(\"Invalid credentials!\")\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault(); // Prevent the default form submission\r\n        logInUser();\r\n    };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n    document.body.style.overflow = \"hidden\";\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    document.body.style.overflow = \"initial\";\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.scrollY > window.innerHeight / 3 && !isModalOpen) {\r\n        openModal();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [isModalOpen]);\r\n\r\n  const handleKeyDown = (evt: React.KeyboardEvent) => {\r\n    if (evt.key === 'Escape') {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"scroll-down\">\r\n        SCROLL DOWN\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\r\n          <path d=\"M16 3C8.832031 3 3 8.832031 3 16s5.832031 13 13 13 13-5.832031 13-13S23.167969 3 16 3zm0 2c6.085938 0 11 4.914063 11 11 0 6.085938-4.914062 11-11 11-6.085937 0-11-4.914062-11-11C5 9.914063 9.914063 5 16 5zm-1 4v10.28125l-4-4-1.40625 1.4375L16 23.125l6.40625-6.40625L21 15.28125l-4 4V9z\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <video className=\"container-home\" muted={true} loop={true} autoPlay={true} src=\"//cdn.shopify.com/s/files/1/0526/6905/5172/t/5/assets/footer.mp4?v=29581141968431347981633714450\"></video>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal is-open\">\r\n          <div className=\"modal-container\">\r\n            <div className=\"modal-left\">\r\n              <h1 className=\"modal-title\">Welcome!</h1>\r\n              <p className=\"modal-desc\">This is the perfect place to learn and improve faster. Let's embark on an exciting journey of knowledge and growth together!</p>\r\n               <form onSubmit={handleSubmit}>\r\n              <div className=\"input-block\">\r\n                <label htmlFor=\"email\" className=\"input-label\">Username</label>\r\n                <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} id=\"\"></input>\r\n              </div>\r\n\r\n              <div className=\"input-block\">\r\n                <label htmlFor=\"password\" className=\"input-label\">Password</label>\r\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} id=\"\"></input>\r\n              </div>\r\n\r\n              <div className=\"modal-buttons\">\r\n                <a href=\"\" className=\"\">Forgot your password?</a>\r\n                <button className=\"input-button\" type=\"submit\">Login</button>\r\n              </div>\r\n              </form>\r\n              <p className=\"sign-up\">Don't have an account? <a href=\"/register\">sign up now</a></p>\r\n            </div>\r\n\r\n\r\n            <div className=\"modal-right\">\r\n              <video className=\"background\" muted={true} loop={true} autoPlay={true} src=\"//cdn.shopify.com/s/files/1/0526/6905/5172/t/5/assets/footer.mp4?v=29581141968431347981633714450\"></video>\r\n            </div>\r\n            <button className=\"icon-button close-button\" onClick={closeModal}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\">\r\n                <path d=\"M 25 3 C 12.86158 3 3 12.86158 3 25 C 3 37.13842 12.86158 47 25 47 C 37.13842 47 47 37.13842 47 25 C 47 12.86158 37.13842 3 25 3 z M 25 5 C 36.05754 5 45 13.94246 45 25 C 45 36.05754 36.05754 45 25 45 C 13.94246 45 5 36.05754 5 25 C 5 13.94246 13.94246 5 25 5 z M 16.990234 15.990234 A 1.0001 1.0001 0 0 0 16.292969 17.707031 L 23.585938 25 L 16.292969 32.292969 A 1.0001 1.0001 0 1 0 17.707031 33.707031 L 25 26.414062 L 32.292969 33.707031 A 1.0001 1.0001 0 1 0 33.707031 32.292969 L 26.414062 25 L 33.707031 17.707031 A 1.0001 1.0001 0 0 0 32.980469 15.990234 A 1.0001 1.0001 0 0 0 32.292969 16.292969 L 25 23.585938 L 17.707031 16.292969 A 1.0001 1.0001 0 0 0 16.990234 15.990234 z\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!isModalOpen && (\r\n        <div className=\"modal\">\r\n          <button className=\"modal-button\" onClick={openModal}>Click here to login</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/pages/home.tsx b/frontend/src/components/pages/home.tsx
--- a/frontend/src/components/pages/home.tsx	(revision 978831d0bbb2aee1eacf0561d6897f74e714d85c)
+++ b/frontend/src/components/pages/home.tsx	(date 1686935512966)
@@ -1,119 +1,21 @@
-import React, { useState, useEffect } from 'react';
+import React from 'react';
 import '../css/home.css';
-import httpClient from "../../httpClient";
+
 
 const Home: React.FC = () => {
-  const [isModalOpen, setIsModalOpen] = useState(false);
-  const [username, setUsername] = useState<string>("");
-    const [password, setPassword] = useState<string>("");
-
-    const logInUser = async () => {
-        console.log(username, password)
 
-        try {
-            const response = await httpClient.post("//localhost:5000/login", {
-                username, password,
-            });
-
-            window.location.href = "/dashboard";
-        } catch (e: any) {
-            if (e.response.status === 401) {
-                alert("Invalid credentials!")
-            }
-        }
-    };
-
-    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
-        event.preventDefault(); // Prevent the default form submission
-        logInUser();
-    };
-
-  const openModal = () => {
-    setIsModalOpen(true);
-    document.body.style.overflow = "hidden";
-  };
-
-  const closeModal = () => {
-    setIsModalOpen(false);
-    document.body.style.overflow = "initial";
-    window.scrollTo({ top: 0, behavior: 'smooth' });
-  };
-
-  useEffect(() => {
-    const handleScroll = () => {
-      if (window.scrollY > window.innerHeight / 3 && !isModalOpen) {
-        openModal();
-      }
-    };
-
-    window.addEventListener("scroll", handleScroll);
-
-    return () => {
-      window.removeEventListener("scroll", handleScroll);
-    };
-  }, [isModalOpen]);
-
-  const handleKeyDown = (evt: React.KeyboardEvent) => {
-    if (evt.key === 'Escape') {
-      closeModal();
-    }
-  };
 
   return (
-    <div>
-      <div className="scroll-down">
-        SCROLL DOWN
-        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
-          <path d="M16 3C8.832031 3 3 8.832031 3 16s5.832031 13 13 13 13-5.832031 13-13S23.167969 3 16 3zm0 2c6.085938 0 11 4.914063 11 11 0 6.085938-4.914062 11-11 11-6.085937 0-11-4.914062-11-11C5 9.914063 9.914063 5 16 5zm-1 4v10.28125l-4-4-1.40625 1.4375L16 23.125l6.40625-6.40625L21 15.28125l-4 4V9z" />
-        </svg>
-      </div>
-
-      <video className="container-home" muted={true} loop={true} autoPlay={true} src="//cdn.shopify.com/s/files/1/0526/6905/5172/t/5/assets/footer.mp4?v=29581141968431347981633714450"></video>
-
-      {isModalOpen && (
-        <div className="modal is-open">
-          <div className="modal-container">
-            <div className="modal-left">
-              <h1 className="modal-title">Welcome!</h1>
-              <p className="modal-desc">This is the perfect place to learn and improve faster. Let's embark on an exciting journey of knowledge and growth together!</p>
-               <form onSubmit={handleSubmit}>
-              <div className="input-block">
-                <label htmlFor="email" className="input-label">Username</label>
-                <input type="text" value={username} onChange={(e) => setUsername(e.target.value)} id=""></input>
-              </div>
-
-              <div className="input-block">
-                <label htmlFor="password" className="input-label">Password</label>
-                <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} id=""></input>
-              </div>
-
-              <div className="modal-buttons">
-                <a href="" className="">Forgot your password?</a>
-                <button className="input-button" type="submit">Login</button>
-              </div>
-              </form>
-              <p className="sign-up">Don't have an account? <a href="/register">sign up now</a></p>
-            </div>
-
-
-            <div className="modal-right">
-              <video className="background" muted={true} loop={true} autoPlay={true} src="//cdn.shopify.com/s/files/1/0526/6905/5172/t/5/assets/footer.mp4?v=29581141968431347981633714450"></video>
-            </div>
-            <button className="icon-button close-button" onClick={closeModal}>
-              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50">
-                <path d="M 25 3 C 12.86158 3 3 12.86158 3 25 C 3 37.13842 12.86158 47 25 47 C 37.13842 47 47 37.13842 47 25 C 47 12.86158 37.13842 3 25 3 z M 25 5 C 36.05754 5 45 13.94246 45 25 C 45 36.05754 36.05754 45 25 45 C 13.94246 45 5 36.05754 5 25 C 5 13.94246 13.94246 5 25 5 z M 16.990234 15.990234 A 1.0001 1.0001 0 0 0 16.292969 17.707031 L 23.585938 25 L 16.292969 32.292969 A 1.0001 1.0001 0 1 0 17.707031 33.707031 L 25 26.414062 L 32.292969 33.707031 A 1.0001 1.0001 0 1 0 33.707031 32.292969 L 26.414062 25 L 33.707031 17.707031 A 1.0001 1.0001 0 0 0 32.980469 15.990234 A 1.0001 1.0001 0 0 0 32.292969 16.292969 L 25 23.585938 L 17.707031 16.292969 A 1.0001 1.0001 0 0 0 16.990234 15.990234 z"></path>
-              </svg>
-            </button>
+      <section>
+      <div className="container">
+          <h1>Welcome to Meta Plate!</h1>
+          <div className="buttons">
+              <a href="{{url_for('login')}}">Login</a>
+              <a href="{{url_for('register')}}">Register</a>
           </div>
-        </div>
-      )}
-
-      {!isModalOpen && (
-        <div className="modal">
-          <button className="modal-button" onClick={openModal}>Click here to login</button>
-        </div>
-      )}
-    </div>
+      </div>
+
+      </section>
   );
 };
 
